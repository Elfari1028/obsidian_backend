# Generated by Django 3.0.3 on 2020-08-11 23:42

import ckeditor_uploader.fields
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='MyUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('u_avatar', models.ImageField(default='Avatar/default_avatar.jpg', upload_to='Avatar/')),
                ('u_tel', models.CharField(max_length=20, null=True, unique=True)),
                ('u_intro', models.CharField(max_length=256, null=True)),
                ('u_sex', models.BooleanField(blank=True)),
                ('u_age', models.IntegerField(null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('t_id', models.AutoField(primary_key=True, serialize=False)),
                ('t_name', models.CharField(max_length=20, unique=True)),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('create_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Template',
            fields=[
                ('tmplt_id', models.AutoField(primary_key=True, serialize=False)),
                ('content', ckeditor_uploader.fields.RichTextUploadingField(blank=True, max_length=100000, null=True)),
                ('create_time', models.DateTimeField(auto_now=True)),
                ('edit_count', models.IntegerField(default=0)),
                ('u_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TeamMember',
            fields=[
                ('tm_id', models.AutoField(primary_key=True, serialize=False)),
                ('join_time', models.DateTimeField(auto_now_add=True)),
                ('status', models.IntegerField(default=1)),
                ('t_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.Team')),
                ('u_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('f_id', models.AutoField(primary_key=True, serialize=False)),
                ('f_title', models.CharField(max_length=20)),
                ('f_content', ckeditor_uploader.fields.RichTextUploadingField(blank=True, max_length=100000, null=True)),
                ('f_ctime', models.DateTimeField(auto_now_add=True)),
                ('f_etime', models.DateTimeField(auto_now=True)),
                ('f_ecount', models.IntegerField(default=0)),
                ('trash_status', models.BooleanField(default=False)),
                ('share_status', models.BooleanField(default=False)),
                ('f_status', models.BooleanField(default=False)),
                ('f_dtime', models.DateTimeField(null=True)),
                ('is_read', models.IntegerField(default=1)),
                ('is_editor', models.IntegerField(default=1)),
                ('is_delete', models.IntegerField(default=1)),
                ('is_comment', models.IntegerField(default=1)),
                ('is_share', models.IntegerField(default=1)),
                ('t_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='account.Team')),
                ('u_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Favorites',
            fields=[
                ('fav_id', models.AutoField(primary_key=True, serialize=False)),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('f_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.File')),
                ('u_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EditHistory',
            fields=[
                ('ed_id', models.AutoField(primary_key=True, serialize=False)),
                ('edit_time', models.DateTimeField(auto_now_add=True)),
                ('f_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='account.File')),
                ('u_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DocImage',
            fields=[
                ('img_id', models.AutoField(primary_key=True, serialize=False)),
                ('img_url', models.CharField(max_length=500)),
                ('f_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.File')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('c_id', models.AutoField(primary_key=True, serialize=False)),
                ('pc_id', models.IntegerField(null=True)),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('content', models.CharField(max_length=256)),
                ('u_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BrowseRecords',
            fields=[
                ('bro_id', models.AutoField(primary_key=True, serialize=False)),
                ('browse_time', models.DateTimeField(auto_now_add=True)),
                ('f_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.File')),
                ('u_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
